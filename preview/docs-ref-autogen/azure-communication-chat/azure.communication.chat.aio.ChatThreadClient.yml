### YamlMime:PythonClass
uid: azure.communication.chat.aio.ChatThreadClient
name: ChatThreadClient
fullName: azure.communication.chat.aio.ChatThreadClient
module: azure.communication.chat.aio
inheritances:
- builtins.object
summary: 'A client to interact with the AzureCommunicationService Chat gateway.

  Instances of this class is normally created by ChatClient.create_chat_thread()


  This client provides operations to add participant to chat thread, remove participant
  from

  chat thread, send message, delete message, update message, send typing notifications,

  send and list read receipt'
constructor:
  syntax: 'ChatThreadClient(endpoint: str, credential: azure.communication.chat._shared.user_credential_async.CommunicationTokenCredential,
    thread_id: str, **kwargs: typing.Any)'
  parameters:
  - name: endpoint
    description: The endpoint of the Azure Communication resource.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. The value contains a
      User

      Access Token'
    isRequired: true
    types:
    - <xref:CommunicationTokenCredential>
  - name: thread_id
    description: The unique thread id.
    isRequired: true
    types:
    - <xref:str>
variables:
- description: Chat thread id.
  name: thread_id
  types:
  - <xref:str>
examples:
- "Creating the ChatThreadClient.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\26\\\\azure-communication-chat-1.0.0b4\\\
  \\samples\\\\chat_thread_client_sample_async.py\", \"xml:space\": \"preserve\",\
  \ \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
  : 1}} -->\n\n````python\n\n   from datetime import datetime\n   from azure.communication.chat.aio\
  \ import ChatClient, CommunicationTokenCredential, CommunicationTokenRefreshOptions\n\
  \   from azure.communication.chat import ChatThreadParticipant, CommunicationUserIdentifier\n\
  \n   refresh_options = CommunicationTokenRefreshOptions(self.token)\n   chat_client\
  \ = ChatClient(self.endpoint, CommunicationTokenCredential(refresh_options))\n\n\
  \   async with chat_client:\n       topic = \"test topic\"\n       participants\
  \ = [ChatThreadParticipant(\n           user=self.user,\n           display_name='name',\n\
  \           share_history_time=datetime.utcnow()\n       )]\n       chat_thread_client\
  \ = await chat_client.create_chat_thread(topic, participants)\n\n   ````\n"
methods:
- uid: azure.communication.chat.aio.ChatThreadClient.add_participant
  name: add_participant
  summary: Adds single thread participant to a thread. If participant already exist,
    no change occurs.
  signature: 'add_participant(thread_participant: azure.communication.chat._models.ChatThreadParticipant,
    **kwargs) -> None'
  parameters:
  - name: thread_participant
    description: Required. Single thread participant to be added to the thread.
    isRequired: true
    types:
    - <xref:azure.communication.chat.ChatThreadParticipant>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  examples:
  - "Adding single participant to chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.communication.chat\
    \ import ChatThreadParticipant, CommunicationUserIdentifier\n   from datetime\
    \ import datetime\n   new_chat_thread_participant = ChatThreadParticipant(\n \
    \          user=self.new_user,\n           display_name='name',\n           share_history_time=datetime.utcnow())\n\
    \   await chat_thread_client.add_participant(new_chat_thread_participant)\n\n\
    \   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.add_participants
  name: add_participants
  summary: Adds thread participants to a thread. If participants already exist, no
    change occurs.
  signature: 'add_participants(thread_participants: typing.List[azure.communication.chat._models.ChatThreadParticipant],
    **kwargs) -> None'
  parameters:
  - name: thread_participants
    description: Required. Thread participants to be added to the thread.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.communication.chat.ChatThreadParticipant>]
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  examples:
  - "Adding participants to chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.communication.chat\
    \ import ChatThreadParticipant, CommunicationUserIdentifier\n   from datetime\
    \ import datetime\n   new_participant = ChatThreadParticipant(\n           user=self.new_user,\n\
    \           display_name='name',\n           share_history_time=datetime.utcnow())\n\
    \   participants = [new_participant]\n   await chat_thread_client.add_participants(participants)\n\
    \n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.close
  name: close
  signature: close() -> None
- uid: azure.communication.chat.aio.ChatThreadClient.delete_message
  name: delete_message
  summary: Deletes a message.
  signature: 'delete_message(message_id: str, **kwargs) -> None'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  examples:
  - "Deleting a messages.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   await chat_thread_client.delete_message(self._message_id)\n\
    \n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.get_message
  name: get_message
  summary: Gets a message by id.
  signature: 'get_message(message_id: str, **kwargs) -> azure.communication.chat._models.ChatMessage'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ChatMessage, or the result of cls(response)
    types:
    - <xref:azure.communication.chat.ChatMessage>
  examples:
  - "Getting a message by message id.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   chat_message =\
    \ await chat_thread_client.get_message(self._message_id)\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.list_messages
  name: list_messages
  summary: Gets a list of messages from a thread.
  signature: 'list_messages(**kwargs: typing.Any)'
  parameters:
  - name: results_per_page
    description: The maximum number of messages to be returned per page.
    types:
    - <xref:int>
  - name: start_time
    description: The start time where the range query.
    types:
    - <xref:datetime.datetime>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of ChatMessage
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.communication.chat.ChatMessage>]
  examples:
  - "Listing messages of a chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from datetime\
    \ import datetime, timedelta\n   start_time = datetime.utcnow() - timedelta(days=1)\n\
    \   chat_messages = chat_thread_client.list_messages(results_per_page=1, start_time=start_time)\n\
    \   print(\"list_messages succeeded with results_per_page is 1, and start time\
    \ is yesterday UTC\")\n   async for chat_message_page in chat_messages.by_page():\n\
    \       l = [ i async for i in chat_message_page]\n       print(\"page size: \"\
    , len(l))\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.list_participants
  name: list_participants
  summary: Gets the participants of a thread.
  signature: 'list_participants(**kwargs: typing.Any)'
  parameters:
  - name: results_per_page
    description: The maximum number of participants to be returned per page.
    types:
    - <xref:int>
  - name: skip
    description: Skips participants up to a specified position in response.
    types:
    - <xref:int>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of ChatThreadParticipant
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.communication.chat.ChatThreadParticipant>]
  examples:
  - "Listing participants of chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   chat_thread_participants\
    \ = chat_thread_client.list_participants()\n   print(\"list_participants succeeded,\
    \ participants:\")\n   async for chat_thread_participant in chat_thread_participants:\n\
    \       print(chat_thread_participant)\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.list_read_receipts
  name: list_read_receipts
  summary: Gets read receipts for a thread.
  signature: 'list_read_receipts(**kwargs: typing.Any)'
  parameters:
  - name: results_per_page
    description: The maximum number of chat message read receipts to be returned per
      page.
    types:
    - <xref:int>
  - name: skip
    description: Skips chat message read receipts up to a specified position in response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of ChatMessageReadReceipt
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.communication.chat.ChatMessageReadReceipt>]
  examples:
  - "Listing read receipts.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   read_receipts\
    \ = chat_thread_client.list_read_receipts()\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.remove_participant
  name: remove_participant
  summary: Remove a participant from a thread.
  signature: 'remove_participant(user: azure.communication.chat._shared.models.CommunicationUserIdentifier,
    **kwargs) -> None'
  parameters:
  - name: user
    description: Required. User identity of the thread participant to remove from
      the thread.
    isRequired: true
    types:
    - <xref:azure.communication.chat.CommunicationUserIdentifier>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  examples:
  - "Removing participant from chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   await chat_thread_client.remove_participant(self.new_user)\n\
    \n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.send_message
  name: send_message
  summary: "Sends a message to a thread.\n\n\nDefault: ChatMessageType.TEXT\n:type\
    \ chat_message_type: str or ~azure.communication.chat.models.ChatMessageType\n\
    :keyword str sender_display_name: The display name of the message sender. This\
    \ property is used to\n\n\n   populate sender name for push notifications."
  signature: 'send_message(content: str, **kwargs) -> str'
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: str, or the result of cls(response)
    types:
    - <xref:str>
  examples:
  - "Sending a message.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.communication.chat\
    \ import ChatMessagePriority\n\n   priority=ChatMessagePriority.NORMAL\n   content='hello\
    \ world'\n   sender_display_name='sender name'\n\n   send_message_result_id =\
    \ await chat_thread_client.send_message(\n       content,\n       priority=priority,\n\
    \       sender_display_name=sender_display_name)\n\n   send_message_result_w_type_id\
    \ = await chat_thread_client.send_message(\n       content,\n       sender_display_name=sender_display_name,\
    \ chat_message_type=ChatMessageType.TEXT)\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.send_read_receipt
  name: send_read_receipt
  summary: Posts a read receipt event to a thread, on behalf of a user.
  signature: 'send_read_receipt(message_id: str, **kwargs) -> None'
  parameters:
  - name: message_id
    description: Required. Id of the latest message read by current user.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  examples:
  - "Sending read receipt of a chat message.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   await chat_thread_client.send_read_receipt(self._message_id)\n\
    \n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.send_typing_notification
  name: send_typing_notification
  summary: Posts a typing event to a thread, on behalf of a user.
  signature: send_typing_notification(**kwargs) -> None
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  examples:
  - "Sending typing notification.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   await chat_thread_client.send_typing_notification()\n\
    \n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.update_message
  name: update_message
  summary: Updates a message.
  signature: 'update_message(message_id: str, *, content: str = None, **kwargs) ->
    None'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: Chat message content.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  examples:
  - "Updating a sent messages.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   content = \"updated\
    \ message content\"\n   await chat_thread_client.update_message(self._message_id,\
    \ content=content)\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.update_topic
  name: update_topic
  summary: Updates a thread's properties.
  signature: 'update_topic(*, topic: str = None, **kwargs) -> None'
  parameters:
  - name: topic
    description: 'Thread topic. If topic is not specified, the update will succeeded
      but

      chat thread properties will not be changed.'
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  examples:
  - "Updating chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\26\\\\azure-communication-chat-1.0.0b4\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   topic = \"updated\
    \ thread topic\"\n   await chat_thread_client.update_topic(topic=topic)\n\n  \
    \ ````\n"
attributes:
- uid: azure.communication.chat.aio.ChatThreadClient.thread_id
  name: thread_id
  summary: Gets the thread id from the client.
  return:
    types:
    - <xref:str>
