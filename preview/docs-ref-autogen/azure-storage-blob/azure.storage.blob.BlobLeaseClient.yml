### YamlMime:PythonClass
uid: azure.storage.blob.BlobLeaseClient
name: BlobLeaseClient
fullName: azure.storage.blob.BlobLeaseClient
module: azure.storage.blob
inheritances:
- builtins.object
summary: 'Creates a new BlobLeaseClient.


  This client provides lease operations on a BlobClient or ContainerClient.'
constructor:
  syntax: BlobLeaseClient(client, lease_id=None)
  parameters:
  - name: client
    description: The client of the blob or container to lease.
    isRequired: true
    types:
    - <xref:azure.storage.blob.BlobClient>
    - <xref:azure.storage.blob.ContainerClient>
  - name: lease_id
    description: 'A string representing the lease ID of an existing lease. This value
      does not

      need to be specified in order to acquire a new lease, or break one.'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: 'The ID of the lease currently being maintained. This will be *None*
    if no

    lease has yet been acquired.'
  name: id
  types:
  - <xref:str>
- description: 'The ETag of the lease currently being maintained. This will be *None*
    if no

    lease has yet been acquired or modified.'
  name: etag
  types:
  - <xref:str>
- description: 'The last modified timestamp of the lease currently being maintained.

    This will be *None* if no lease has yet been acquired or modified.'
  name: last_modified
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.storage.blob.BlobLeaseClient.acquire
  name: acquire
  summary: "Requests a new lease.\n\nIf the container does not have an active lease,\
    \ the Blob service creates a\nlease on the container and returns a new lease ID.\n\
    \n\n:keyword str if_tags_match_condition\n   Specify a SQL where clause on blob\
    \ tags to operate only on blob with a matching value.\n   eg. \"\"tagname\"='my\
    \ tag'\"\n\n   New in version 12.4.0."
  signature: acquire(lease_duration=-1, **kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.BlobLeaseClient.break_lease
  name: break_lease
  summary: "Break the lease, if the container or blob has an active lease.\n\nOnce\
    \ a lease is broken, it cannot be renewed. Any authorized request can break the\
    \ lease;\nthe request is not required to specify a matching lease ID. When a lease\n\
    is broken, the lease break period is allowed to elapse, during which time\nno\
    \ lease operation except break and release can be performed on the container or\
    \ blob.\nWhen a lease is successfully broken, the response indicates the interval\n\
    in seconds until a new lease can be acquired.\n\n\n:keyword str if_tags_match_condition\n\
    \   Specify a SQL where clause on blob tags to operate only on blob with a matching\
    \ value.\n   eg. \"\"tagname\"='my tag'\"\n\n   New in version 12.4.0."
  signature: break_lease(lease_break_period=None, **kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: Approximate time remaining in the lease period, in seconds.
    types:
    - <xref:int>
- uid: azure.storage.blob.BlobLeaseClient.change
  name: change
  summary: "Change the lease ID of an active lease.\n\n\n:keyword str if_tags_match_condition\n\
    \   Specify a SQL where clause on blob tags to operate only on blob with a matching\
    \ value.\n   eg. \"\"tagname\"='my tag'\"\n\n   New in version 12.4.0."
  signature: change(proposed_lease_id, **kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: None
- uid: azure.storage.blob.BlobLeaseClient.release
  name: release
  summary: "Release the lease.\n\nThe lease may be released if the client lease id\
    \ specified matches\nthat associated with the container or blob. Releasing the\
    \ lease allows another client\nto immediately acquire the lease for the container\
    \ or blob as soon as the release is complete.\n\n\n:keyword str if_tags_match_condition\n\
    \   Specify a SQL where clause on blob tags to operate only on blob with a matching\
    \ value.\n   eg. \"\"tagname\"='my tag'\"\n\n   New in version 12.4.0."
  signature: release(**kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: None
- uid: azure.storage.blob.BlobLeaseClient.renew
  name: renew
  summary: "Renews the lease.\n\nThe lease can be renewed if the lease ID specified\
    \ in the\nlease client matches that associated with the container or blob. Note\
    \ that\nthe lease may be renewed even if it has expired as long as the container\n\
    or blob has not been leased again since the expiration of that lease. When you\n\
    renew a lease, the lease duration clock resets.\n\n\n:keyword str if_tags_match_condition\n\
    \   Specify a SQL where clause on blob tags to operate only on blob with a matching\
    \ value.\n   eg. \"\"tagname\"='my tag'\"\n\n   New in version 12.4.0."
  signature: renew(**kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: None
