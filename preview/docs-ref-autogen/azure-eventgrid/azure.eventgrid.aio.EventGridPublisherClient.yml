### YamlMime:PythonClass
uid: azure.eventgrid.aio.EventGridPublisherClient
name: EventGridPublisherClient
fullName: azure.eventgrid.aio.EventGridPublisherClient
module: azure.eventgrid.aio
inheritances:
- builtins.object
summary: Asynchronous EventGrid Python Publisher Client.
constructor:
  syntax: 'EventGridPublisherClient(endpoint: str, credential: typing.Union[azure.core.credentials.AzureKeyCredential,
    azure.core.credentials.AzureSasCredential], **kwargs: typing.Any) -> None'
  parameters:
  - name: endpoint
    description: The topic endpoint to send the events to.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credential object used for authentication which implements

      SAS key authentication or SAS token authentication.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.AzureSasCredential>
methods:
- uid: azure.eventgrid.aio.EventGridPublisherClient.close
  name: close
  summary: Close the <xref:azure.eventgrid.aio.EventGridPublisherClient> session.
  signature: close() -> None
- uid: azure.eventgrid.aio.EventGridPublisherClient.send
  name: send
  summary: 'Sends event data to topic hostname specified during client initialization.

    Multiple events can be published at once by seding a list of events. It is very

    inefficient to loop the send method for each event instead of just using a list

    and we highly recommend against it.'
  signature: 'send(events: typing.Union[azure.eventgrid._models.CloudEvent, azure.eventgrid._models.EventGridEvent,
    typing.Dict, typing.List[azure.eventgrid._models.CloudEvent], typing.List[azure.eventgrid._models.EventGridEvent],
    typing.List[typing.Dict]], **kwargs: typing.Any) -> None'
  parameters:
  - name: events
    description: A list of CloudEvent/EventGridEvent to be sent.
    isRequired: true
    types:
    - <xref:SendType>
  - name: content_type
    description: 'The type of content to be used to send the events.

      Has default value "application/json; charset=utf-8" for EventGridEvents,

      with "cloudevents-batch+json" for CloudEvents'
    types:
    - <xref:str>
  return:
    types:
    - <xref:None>
  exceptions:
  - type: ValueError
  - type: ValueError
